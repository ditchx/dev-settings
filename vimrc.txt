set nocompatible

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
    

call plug#begin('~/.vim/plugged')

Plug 'preservim/nerdtree'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'airblade/vim-gitgutter'
Plug 'vim-airline/vim-airline'
Plug 'jeetsukumaran/vim-buffergator'
Plug 'vim-airline/vim-airline-themes'
Plug 'tmsvg/pear-tree'
Plug 'ludovicchabant/vim-gutentags'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-obsession'
Plug 'edkolev/tmuxline.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ervandew/supertab'
Plug 'sheerun/vim-polyglot'
Plug 'evanleck/vim-svelte', {'branch': 'main'}
Plug 'stephpy/vim-php-cs-fixer'

if has('nvim') || has('patch-8.0.902')
  Plug 'mhinz/vim-signify'
else
  Plug 'mhinz/vim-signify', { 'branch': 'legacy' }
endif


call plug#end()


" General Settings
set number
set numberwidth=2
set updatetime=100
set tabstop=4 shiftwidth=4 expandtab
set splitright
let g:molokai_original = 1
let g:rehash256 = 1
syntax enable
colorscheme molokai
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>
set redrawtime=60000

" NEDRTree Settings
map <C-n> :NERDTreeToggle<CR>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif


" Airline Settings
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme='deus'
let g:airline#extensions#tmuxline#enabled = 0

" Vim-Go Settings
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_operators = 1
let g:go_auto_type_info=1
let g:go_fmt_command = "goimports"

" fzf settings
nnoremap <leader>s :<C-u>FZF<CR> 

" SuperTab Settings
let g:SuperTabClosePreviewOnPopupClose = 1
autocmd FileType *
  \ if &omnifunc != '' |
  \   call SuperTabChain(&omnifunc, "<c-p>") |
  \ endif

" Signify Settings
nnoremap <leader>gp :SignifyHunkDiff<cr>
nnoremap <leader>gu :SignifyHunkUndo<cr>

" Gutentags Settings
" Mostly taken from https://www.programmersought.com/article/20324418095/

"gutentags searches for the logo of the project directory, and when these file/directory names are encountered, it stops recursing to the upper directory
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']

"The name of the generated data file
let g:gutentags_ctags_tagfile = '.tags'

"Put all the automatically generated tags files into the ~/.cache/tags directory to avoid polluting the project directory
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags

"Configure ctags parameters
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']

"Detect ~/.cache/tags does not exist and create a new one
if !isdirectory(s:vim_tags)
    silent! call mkdir(s:vim_tags, 'p')
endif

"php-cs-fixer settings
nnoremap <silent><leader>pcf :call PhpCsFixerFixFile()<CR>

